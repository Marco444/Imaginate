val city: "./city.png"
val forest: "./forest.png"
val desert: "./desert.png"
val underwater: "./underwater.png"
val space: "./space.png"
val timeTravel: "./timeTravel.png"
val portal: "./portal.png"
val ancientTemple: "./ancientTemple.png"
val futuristicCity: "./futuristicCity.png"
val mysteryIsland: "./mysteryIsland.png"
val parallelUniverse: "./parallelUniverse.png"
val alienPlanet: "./alienPlanet.png"
val mythicalCreatures: "./mythicalCreatures.png"
val robots: "./robots.png"
val adventurers: "./adventurers.png"
val timeMachine: "./timeMachine.png"
val ancientScroll: "./ancientScroll.png"
val holographicMap: "./holographicMap.png"
val prophecy: "./prophecy.png"
val interdimensionalKey: "./interdimensionalKey.png"

def addLocation(location):
    .addBackground(location)

def applyTimeTravelEffect(effect):
    .addFlavour(effect)

def openPortal(portalType):
    .addFlavour(portalType)

def exploreDestination(destination):
    .addBackground(destination)

def addCharacters(characters):
    .addFlavour(characters)

def addItem(item):
    .addFlavour(item)

def beginAdventure(location, effect):
    .addLocation(location)
    .applyTimeTravelEffect(effect)

def enterPortal(portalType, destination):
    .openPortal(portalType)
    .exploreDestination(destination)

def discoverProphecy(characters, item):
    .addCharacters(characters)
    .addItem(item)

def completeInterdimensionalJourney(adventure, portal, prophecy):
    .beginAdventure(adventure.location, adventure.effect)
    .enterPortal(portal.portalType, portal.destination)
    .discoverProphecy(prophecy.characters, prophecy.item)

Imaginate
    .forEachFocus(city, forest, desert, underwater, space)
    .completeInterdimensionalJourney({location: city, effect: timeTravel}, {portalType: portal, destination: ancientTemple}, {characters: adventurers, item: ancientScroll})
    .completeInterdimensionalJourney({location: forest, effect: timeTravel}, {portalType: portal, destination: futuristicCity}, {characters: robots, item: holographicMap})
    .completeInterdimensionalJourney({location: desert, effect: timeTravel}, {portalType: portal, destination: mysteryIsland}, {characters: mythicalCreatures, item: prophecy})
    .completeInterdimensionalJourney({location: underwater, effect: timeTravel}, {portalType: portal, destination: parallelUniverse}, {characters: adventurers, item: timeMachine})
    .completeInterdimensionalJourney({location: space, effect: timeTravel}, {portalType: portal, destination: alienPlanet}, {characters: robots, item: interdimensionalKey})
    .renderAll()

